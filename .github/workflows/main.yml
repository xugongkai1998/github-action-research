name: CI

# 打标签时触发构建，另外标签需v开头，例如v1.0.0，同时需要配置 DOCKER_PASSWORD 的 secrets
# 若需要企业微信通知，还需要配置 WECHAT_WORK_BOT_WEBHOOK 的 secrets
#   构建后镜像为 ${docker_registry}/${docker_username}/${repo_name}:1.0.0
on:
  push:
    branches:
      - master
    tags:
      - 'release-v*'

jobs:
  build-image:
    runs-on: ubuntu-latest
    container:
      # 使用支持docker的act镜像
      image: catthehacker/ubuntu:act-latest
      volumes:
        # 缓存docker构建步骤
        - ubuntu_dockercache:/opt/dockercache
    env:
      RUNNER_TOOL_CACHE: /toolcache
      # 此处可修改为你任意 docker 镜像仓库地址和用户名
      DOCKER_REGISTRY: docker.io
      DOCKER_USERNAME: xugongkai
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Docker配置qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Docker配置多平台环境
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # 登录镜像仓库
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 生成名称和版本，例如 seepine/springboot-demo ，由发布 v1.2.5 触发，则分别为
      # REPO_NAME=springboot-demo
      # REPO_VERSION=1.2.5
      - name: Get Meta
        id: meta
        run: |
          echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT
          echo REPO_VERSION=$(echo ${{ github.ref }} | awk -F"/" '{print $3}' | awk -F"v" '{print $2}') >> $GITHUB_OUTPUT          

      # 打包构建
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          # 即最终打包成例如 registry.cn-hangzhou.aliyuncs.com/seepine/springboot-demo:latest
          # 和 registry.cn-hangzhou.aliyuncs.com/seepine/springboot-demo:1.2.5
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ steps.meta.outputs.REPO_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ steps.meta.outputs.REPO_NAME }}:${{ steps.meta.outputs.REPO_VERSION }}
          cache-from: type=local,src=/opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache
          cache-to: type=local,dest=/opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache-new,mode=max

      # 重建docker缓存
      - name: Rebuild docker cache
        run: |
          rm -rf /opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache
          mv /opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache-new /opt/dockercache/.buildx-${{ steps.meta.outputs.REPO_NAME }}-cache
